<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="http://localhost:4000/gsoc2022-Akshay_Narisetti/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/gsoc2022-Akshay_Narisetti/" rel="alternate" type="text/html" /><updated>2022-09-06T00:06:56+05:30</updated><id>http://localhost:4000/gsoc2022-Akshay_Narisetti/feed.xml</id><title type="html">GSOC 2022 - RoboticsAcademy</title><subtitle>GSOC 2022 project for RoboticsAcademy. The main aim is to improve Autonomous Driving Exercises at RoboticsAcademy</subtitle><entry><title type="html">Coding Period - Week 13: Final Thoughts</title><link href="http://localhost:4000/gsoc2022-Akshay_Narisetti/2022/09/05/Coding-Period-Week-13.html" rel="alternate" type="text/html" title="Coding Period - Week 13: Final Thoughts" /><published>2022-09-05T00:00:00+05:30</published><updated>2022-09-05T00:00:00+05:30</updated><id>http://localhost:4000/gsoc2022-Akshay_Narisetti/2022/09/05/Coding%20Period%20-%20Week%2013</id><content type="html" xml:base="http://localhost:4000/gsoc2022-Akshay_Narisetti/2022/09/05/Coding-Period-Week-13.html">&lt;p&gt;The final week was spent on wrapping up all the work done throughout the 3 months including documentation.&lt;/p&gt;

&lt;p&gt;This summer has been the most exciting summer ever! It was great to work on a really cool project and apply what I know in Robotics Domain and web Development in which I’m very much interested in, and learn more about both along the way.&lt;/p&gt;

&lt;p&gt;I would like to thank José María Cañas and Luis Roberto Morales for helping and guiding me all the way, making this possible.&lt;/p&gt;

&lt;p&gt;This blog post describes some final thoughts and comments regarding the future scope and improvements to the project.&lt;/p&gt;

&lt;h3 id=&quot;achievements&quot;&gt;Achievements&lt;/h3&gt;
&lt;p&gt;During the course of these 3 months, we developed working Ackermann car models with sensor interfaces to be used in CarJunction Exercise and AutoParking Exercise of JdeRobot RoboticsAcademy. The contents of the project include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Lincoln Mkz Model&lt;/strong&gt;: An Ackermann car model with great aesthetics, physics, and looks that are very close to the real-life self-driving car.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Ford Model&lt;/strong&gt;: Lincoln Mkz is less widely used so we came up with a choice for students who want to try out the ford model inside Exercises.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;3D Lidar&lt;/strong&gt;: The 3D Lidar was really an aspiration for both my mentors and me. Self-Driving cars such as Waymo were an inspiration for this feature and now RoboticsAcademy also has one.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;GPS Sensor and Cameras&lt;/strong&gt;: GPS Sensors and Cameras have been added as a part of implementation for the current exercise requirements and also keeping in mind the upcoming exercises like Navigation Exercise using GPS only method.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;future-scope&quot;&gt;Future Scope&lt;/h3&gt;
&lt;p&gt;We weren’t quite able to accomplish all the objectives of the proposal, but completed all we could. Some of the improvements that I can focus in the future are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Integration&lt;/strong&gt;: The Models are ready to be deployed to the RoboticsAcademy Docker Image, although a significant effort was made, Integrating them required a development life cycle that seems to take time, I plan on doing this post-GSoC.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;New GPS Exercise&lt;/strong&gt;: GPS Navigation teaches a lot about the inner-working and the algorithms used in self-driving cars, this would help in giving a boost towards implementation of Ackermann steering and Navigation at ease for the students.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;personal-thoughts&quot;&gt;Personal Thoughts&lt;/h3&gt;

&lt;p&gt;The 3-month journey of GSoC was quite amazing. I really enjoyed writing the code and learning new things about coding, Docker, Django and evolutionary robotics. It was great being mentored by José María Sir and Luis Roberto Sir.&lt;/p&gt;

&lt;p&gt;I would like to &lt;strong&gt;work further on the project&lt;/strong&gt; post-GSOC by accepting membership of the JdeRobot Organization.&lt;/p&gt;

&lt;h3 id=&quot;final-product-teasers&quot;&gt;Final Product Teasers&lt;/h3&gt;

&lt;!-- Courtesy of embedresponsively.com --&gt;

&lt;div class=&quot;responsive-video-container&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube-nocookie.com/embed/6_kzKV7Ii6g&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/div&gt;

&lt;!-- Courtesy of embedresponsively.com --&gt;

&lt;div class=&quot;responsive-video-container&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube-nocookie.com/embed/PdItmMwmirs&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/div&gt;</content><author><name></name></author><summary type="html">The final week was spent on wrapping up all the work done throughout the 3 months including documentation. This summer has been the most exciting summer ever! It was great to work on a really cool project and apply what I know in Robotics Domain and web Development in which I’m very much interested in, and learn more about both along the way. I would like to thank José María Cañas and Luis Roberto Morales for helping and guiding me all the way, making this possible. This blog post describes some final thoughts and comments regarding the future scope and improvements to the project. Achievements During the course of these 3 months, we developed working Ackermann car models with sensor interfaces to be used in CarJunction Exercise and AutoParking Exercise of JdeRobot RoboticsAcademy. The contents of the project include: Lincoln Mkz Model: An Ackermann car model with great aesthetics, physics, and looks that are very close to the real-life self-driving car. Ford Model: Lincoln Mkz is less widely used so we came up with a choice for students who want to try out the ford model inside Exercises. 3D Lidar: The 3D Lidar was really an aspiration for both my mentors and me. Self-Driving cars such as Waymo were an inspiration for this feature and now RoboticsAcademy also has one. GPS Sensor and Cameras: GPS Sensors and Cameras have been added as a part of implementation for the current exercise requirements and also keeping in mind the upcoming exercises like Navigation Exercise using GPS only method. Future Scope We weren’t quite able to accomplish all the objectives of the proposal, but completed all we could. Some of the improvements that I can focus in the future are: Integration: The Models are ready to be deployed to the RoboticsAcademy Docker Image, although a significant effort was made, Integrating them required a development life cycle that seems to take time, I plan on doing this post-GSoC. New GPS Exercise: GPS Navigation teaches a lot about the inner-working and the algorithms used in self-driving cars, this would help in giving a boost towards implementation of Ackermann steering and Navigation at ease for the students. Personal Thoughts The 3-month journey of GSoC was quite amazing. I really enjoyed writing the code and learning new things about coding, Docker, Django and evolutionary robotics. It was great being mentored by José María Sir and Luis Roberto Sir. I would like to work further on the project post-GSOC by accepting membership of the JdeRobot Organization. Final Product Teasers</summary></entry><entry><title type="html">Coding Period - Week 12</title><link href="http://localhost:4000/gsoc2022-Akshay_Narisetti/2022/08/28/Coding-Period-Week-12.html" rel="alternate" type="text/html" title="Coding Period - Week 12" /><published>2022-08-28T00:00:00+05:30</published><updated>2022-08-28T00:00:00+05:30</updated><id>http://localhost:4000/gsoc2022-Akshay_Narisetti/2022/08/28/Coding%20Period%20-%20Week%2012</id><content type="html" xml:base="http://localhost:4000/gsoc2022-Akshay_Narisetti/2022/08/28/Coding-Period-Week-12.html">&lt;p&gt;We discussed at the beginning of the week, and the task at hand was to migrate all local development packages into a single sdf format, while also starting to incorporate the car model into the RoboticsAcademy Project.&lt;/p&gt;
&lt;h3 id=&quot;migration&quot;&gt;Migration&lt;/h3&gt;
&lt;p&gt;I started migrating all the xacro files to the urdf format. There were two ways of going about it, one way was to convert the files directly by rewriting them, which is not really realistic and the other way was to convert them using xacro command and later inspect the URDF to make sure it makes sense.&lt;/p&gt;

&lt;p&gt;I chose the latter and started the migration process, the xacro error messages can be quite cryptic, especially if there is a non-xml syntax error (such as missing a closing } from ${}. The only remedy I have found is reading carefully and using the text editor to make sure that all braces are matched.&lt;/p&gt;

&lt;p&gt;Once they have been migrated, gazebo can now directly call the urdf which internally converts it into sdf and the problem is solved.&lt;/p&gt;

&lt;h3 id=&quot;environment-variables&quot;&gt;Environment Variables&lt;/h3&gt;

&lt;p&gt;I started by importing all the local packages into catkin workspace inside the RADI, everything was good even after the catkin build, so what was stopping me from adding launch instructions in the instructions.json file to start launching the exercise?&lt;/p&gt;

&lt;p&gt;Every Instance of ssh opens a new terminal having its own environment variables and updating the env variables inside one terminal will not change the state of them in the current RADI Instance. The packages would run perfectly inside RADI after catkin build inside the terminal where it was build but not outside of that particular shell.&lt;/p&gt;

&lt;p&gt;So the main problem at root was to import all packages into Docker File and build them.&lt;/p&gt;

&lt;h3 id=&quot;tasks&quot;&gt;Tasks&lt;/h3&gt;
&lt;ul class=&quot;task-list&quot;&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;Migrate all packages under one sdf format.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;Although there were a lot of dependency errors while building on DockerFile a certain progress has been made to eliminate a few, the next week will be more concentrated towards solving all the dependency issues and building the DockerFile with the car models.&lt;/p&gt;</content><author><name></name></author><summary type="html">We discussed at the beginning of the week, and the task at hand was to migrate all local development packages into a single sdf format, while also starting to incorporate the car model into the RoboticsAcademy Project. Migration I started migrating all the xacro files to the urdf format. There were two ways of going about it, one way was to convert the files directly by rewriting them, which is not really realistic and the other way was to convert them using xacro command and later inspect the URDF to make sure it makes sense. I chose the latter and started the migration process, the xacro error messages can be quite cryptic, especially if there is a non-xml syntax error (such as missing a closing } from ${}. The only remedy I have found is reading carefully and using the text editor to make sure that all braces are matched. Once they have been migrated, gazebo can now directly call the urdf which internally converts it into sdf and the problem is solved. Environment Variables I started by importing all the local packages into catkin workspace inside the RADI, everything was good even after the catkin build, so what was stopping me from adding launch instructions in the instructions.json file to start launching the exercise? Every Instance of ssh opens a new terminal having its own environment variables and updating the env variables inside one terminal will not change the state of them in the current RADI Instance. The packages would run perfectly inside RADI after catkin build inside the terminal where it was build but not outside of that particular shell. So the main problem at root was to import all packages into Docker File and build them. Tasks Migrate all packages under one sdf format. Conclusion Although there were a lot of dependency errors while building on DockerFile a certain progress has been made to eliminate a few, the next week will be more concentrated towards solving all the dependency issues and building the DockerFile with the car models.</summary></entry><entry><title type="html">Coding Period - Week 11</title><link href="http://localhost:4000/gsoc2022-Akshay_Narisetti/2022/08/21/Coding-Period-Week-11.html" rel="alternate" type="text/html" title="Coding Period - Week 11" /><published>2022-08-21T00:00:00+05:30</published><updated>2022-08-21T00:00:00+05:30</updated><id>http://localhost:4000/gsoc2022-Akshay_Narisetti/2022/08/21/Coding%20Period%20-%20Week%2011</id><content type="html" xml:base="http://localhost:4000/gsoc2022-Akshay_Narisetti/2022/08/21/Coding-Period-Week-11.html">&lt;p&gt;To kick off week 11 of the coding period We discussed at the beginning of the week to start integrating the car model into Robotics Academy’s Exercises.&lt;/p&gt;

&lt;h3 id=&quot;integration&quot;&gt;Integration&lt;/h3&gt;

&lt;p&gt;I started by creating a new exercise instead of changing the existing exercise because this will not break any code whatsoever. Once the exercise template was added I started by adding the Lincoln Mkz package to the RADI.&lt;/p&gt;

&lt;p&gt;The car was imported but the plugins and functional elements were not working, most of the time was taken up for getting the plugins setup right, once the plugins were settled the car could be imported directly into gzweb.&lt;/p&gt;

&lt;h3 id=&quot;tasks&quot;&gt;Tasks&lt;/h3&gt;
&lt;ul class=&quot;task-list&quot;&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;Improve Documentation in Robotics Academy for Developers.&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;Start Progress on Implementing Car Model into Car Junction Exercise.&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;Create a new exercise 3 from the car junction exercise.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;Most of the development of the car model has taken place in urdf and xacro, but the current state of car junction exercise is in sdf, so migrating all these files under a single roof will pave a way to implement remaining exercises as well. The coming week’s task will be more focussed towards this.&lt;/p&gt;</content><author><name></name></author><summary type="html">To kick off week 11 of the coding period We discussed at the beginning of the week to start integrating the car model into Robotics Academy’s Exercises. Integration I started by creating a new exercise instead of changing the existing exercise because this will not break any code whatsoever. Once the exercise template was added I started by adding the Lincoln Mkz package to the RADI. The car was imported but the plugins and functional elements were not working, most of the time was taken up for getting the plugins setup right, once the plugins were settled the car could be imported directly into gzweb. Tasks Improve Documentation in Robotics Academy for Developers. Start Progress on Implementing Car Model into Car Junction Exercise. Create a new exercise 3 from the car junction exercise. Conclusion Most of the development of the car model has taken place in urdf and xacro, but the current state of car junction exercise is in sdf, so migrating all these files under a single roof will pave a way to implement remaining exercises as well. The coming week’s task will be more focussed towards this.</summary></entry><entry><title type="html">Coding Period - Week 9, Week 10</title><link href="http://localhost:4000/gsoc2022-Akshay_Narisetti/2022/08/14/Coding-Period-Week-9,-10.html" rel="alternate" type="text/html" title="Coding Period - Week 9, Week 10" /><published>2022-08-14T00:00:00+05:30</published><updated>2022-08-14T00:00:00+05:30</updated><id>http://localhost:4000/gsoc2022-Akshay_Narisetti/2022/08/14/Coding%20Period%20-%20Week%209,%2010</id><content type="html" xml:base="http://localhost:4000/gsoc2022-Akshay_Narisetti/2022/08/14/Coding-Period-Week-9,-10.html">&lt;p&gt;We discussed at the beginning of the week, that the task at hand was to integrate a 3D Lidar and GPS Sensor while also starting to incorporate the car model into the RoboticsAcademy Project.&lt;/p&gt;

&lt;h3 id=&quot;3d-lidar-&quot;&gt;3D Lidar ⚡&lt;/h3&gt;
&lt;p&gt;A 3D Lidar has been added to the car model, which can now be accessed as a 3-dimensional array, which the user can go on to narrow down as per their Field of View requirement.&lt;/p&gt;

&lt;h3 id=&quot;the-gps-sensor-&quot;&gt;The GPS Sensor 🚗&lt;/h3&gt;
&lt;p&gt;As an addition to the existing Sensors, we have also decided to add a GPS Sensor. This can later be used to create future exercises. The GPS follows the earth model, 1 degree of latitude is 60 arc minutes with one arc minute being up to 1.82 kilometers. Hence, a movement of a few meters will be only a tiny fraction of a degree of latitude or longitude. Hence the user will also need to multiply a proportional constant to the GPS Coordinates to track or notice changes during minute car travel.&lt;/p&gt;

&lt;h3 id=&quot;tasks&quot;&gt;Tasks&lt;/h3&gt;
&lt;ul class=&quot;task-list&quot;&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;Add GPS Sensor to the Lincoln Mkz Model.&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;Add a 3D Lidar Module to the Lincoln Mkz Model.&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;Add Documentation to Robotics Academy for Developers.&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;Start Progress on Implementing Car Model into Car Junction Exercise.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;Although it was tough to get started on integrating the car model into RADI, coming weeks will be focussed on the integration part while also tailoring the car model to the exercise needs.&lt;/p&gt;

&lt;h2 id=&quot;progress-video&quot;&gt;Progress Video&lt;/h2&gt;

&lt;h4 id=&quot;3d-lidar&quot;&gt;3D Lidar&lt;/h4&gt;

&lt;!-- Courtesy of embedresponsively.com --&gt;

&lt;div class=&quot;responsive-video-container&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube-nocookie.com/embed/k_psCmHe9Ho&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/div&gt;

&lt;h4 id=&quot;gps-sensor&quot;&gt;GPS Sensor&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/gsoc2022-Akshay_Narisetti/assets/images/gps.png&quot; alt=&quot;New Blocks&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">We discussed at the beginning of the week, that the task at hand was to integrate a 3D Lidar and GPS Sensor while also starting to incorporate the car model into the RoboticsAcademy Project. 3D Lidar ⚡ A 3D Lidar has been added to the car model, which can now be accessed as a 3-dimensional array, which the user can go on to narrow down as per their Field of View requirement. The GPS Sensor 🚗 As an addition to the existing Sensors, we have also decided to add a GPS Sensor. This can later be used to create future exercises. The GPS follows the earth model, 1 degree of latitude is 60 arc minutes with one arc minute being up to 1.82 kilometers. Hence, a movement of a few meters will be only a tiny fraction of a degree of latitude or longitude. Hence the user will also need to multiply a proportional constant to the GPS Coordinates to track or notice changes during minute car travel. Tasks Add GPS Sensor to the Lincoln Mkz Model. Add a 3D Lidar Module to the Lincoln Mkz Model. Add Documentation to Robotics Academy for Developers. Start Progress on Implementing Car Model into Car Junction Exercise. Conclusion Although it was tough to get started on integrating the car model into RADI, coming weeks will be focussed on the integration part while also tailoring the car model to the exercise needs. Progress Video 3D Lidar GPS Sensor</summary></entry><entry><title type="html">Coding Period - Week 8</title><link href="http://localhost:4000/gsoc2022-Akshay_Narisetti/2022/07/24/Coding-Period-Week-8.html" rel="alternate" type="text/html" title="Coding Period - Week 8" /><published>2022-07-24T00:00:00+05:30</published><updated>2022-07-24T00:00:00+05:30</updated><id>http://localhost:4000/gsoc2022-Akshay_Narisetti/2022/07/24/Coding%20Period%20-%20Week%208</id><content type="html" xml:base="http://localhost:4000/gsoc2022-Akshay_Narisetti/2022/07/24/Coding-Period-Week-8.html">&lt;p&gt;This week kicked-off with a discussion on getting started with adding a 2D lidar and a new Ford Car Model with Ackermann Steering.&lt;/p&gt;

&lt;h3 id=&quot;2d-lidar-&quot;&gt;2D Lidar ⚡&lt;/h3&gt;

&lt;p&gt;Lidar is a very important technology in a self-driving car and to enable the Lincoln Mkz to be one, a lidar must be included. The lidar has been placed at the front of the vehicle with 180 degrees view of the surroundings, due to the physical nature of the simulation the lidar cannot be used for a 360 degrees scan. This can be solved by a 3D lidar in the future implementation.&lt;/p&gt;

&lt;h3 id=&quot;the-ford-flavor-&quot;&gt;The Ford Flavor 🚗&lt;/h3&gt;

&lt;p&gt;As an addition to the lineup of the Car models we have decided to add the Ford Model, one that actually pupil can recognise and are familiar with. The model was chosen as it was the best fit on the existing structure of the Ackermann model.&lt;/p&gt;

&lt;h3 id=&quot;tasks&quot;&gt;Tasks&lt;/h3&gt;
&lt;ul class=&quot;task-list&quot;&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;Add Ford Escape Car model with Ackermann Steering.&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;Add a 2D Lidar Module to the Lincoln Mkz Model.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;progress-videos&quot;&gt;Progress Videos&lt;/h2&gt;

&lt;!-- Courtesy of embedresponsively.com --&gt;

&lt;div class=&quot;responsive-video-container&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube-nocookie.com/embed/V0PRyhk-iZ0&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/div&gt;

&lt;!-- Courtesy of embedresponsively.com --&gt;

&lt;div class=&quot;responsive-video-container&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube-nocookie.com/embed/DL-oSyVFte8&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/div&gt;</content><author><name></name></author><summary type="html">This week kicked-off with a discussion on getting started with adding a 2D lidar and a new Ford Car Model with Ackermann Steering. 2D Lidar ⚡ Lidar is a very important technology in a self-driving car and to enable the Lincoln Mkz to be one, a lidar must be included. The lidar has been placed at the front of the vehicle with 180 degrees view of the surroundings, due to the physical nature of the simulation the lidar cannot be used for a 360 degrees scan. This can be solved by a 3D lidar in the future implementation. The Ford Flavor 🚗 As an addition to the lineup of the Car models we have decided to add the Ford Model, one that actually pupil can recognise and are familiar with. The model was chosen as it was the best fit on the existing structure of the Ackermann model.</summary></entry><entry><title type="html">Coding Period - Week 7</title><link href="http://localhost:4000/gsoc2022-Akshay_Narisetti/2022/07/18/Coding-Period-Week-7.html" rel="alternate" type="text/html" title="Coding Period - Week 7" /><published>2022-07-18T00:00:00+05:30</published><updated>2022-07-18T00:00:00+05:30</updated><id>http://localhost:4000/gsoc2022-Akshay_Narisetti/2022/07/18/Coding%20Period%20-%20Week%207</id><content type="html" xml:base="http://localhost:4000/gsoc2022-Akshay_Narisetti/2022/07/18/Coding-Period-Week-7.html">&lt;p&gt;We had a discussion at the beginning of the week, the task at hand was to get improve asthetics and also add a camera module to thee front of the Lincoln Mkz car.&lt;/p&gt;

&lt;h3 id=&quot;the-camera-module-lag-&quot;&gt;The Camera module lag 😔&lt;/h3&gt;

&lt;p&gt;A camera module is very important to a self-driving car and what’s more important is a latency-free camera module. I started by adding a camera module to the Lincoln Mkz and what resulted was a very good quality codec output but what followed was the latency in frames received. This latency could cause a delay in actions performed by the car and that will take a huge toll on the performance.&lt;/p&gt;

&lt;p&gt;One way to decrease this latency is to compress the images and have a specific topic publish the compressed frames, &lt;strong&gt;&lt;a href=&quot;http://wiki.ros.org/compressed_image_transport&quot;&gt;Compressed_image_transport&lt;/a&gt;&lt;/strong&gt; package is one such package which does this job well.&lt;/p&gt;

&lt;p&gt;After compressing the camera images the latency issue is solved 😊.&lt;/p&gt;

&lt;h3 id=&quot;how-did-i-upgrade-the-textures&quot;&gt;How did I upgrade the Textures?&lt;/h3&gt;

&lt;p&gt;It’s very important for a simulation model to look realistic, a realistic model is what encourages anyone to code in a simulation mode.&lt;/p&gt;

&lt;p&gt;I started by adding and testing out different color and textures to the car model in &lt;strong&gt;Fusion 360&lt;/strong&gt; and it was a big mistake as I realized fusion 360 does not export colors when exported as urdf.&lt;/p&gt;

&lt;p&gt;After a little research I found out that &lt;strong&gt;Blender&lt;/strong&gt; is one such tool where this does not happen, so I applied all the changes I previously made inside blender.&lt;/p&gt;

&lt;p&gt;Now the Car is as good as it gets!&lt;/p&gt;

&lt;h3 id=&quot;tasks&quot;&gt;Tasks&lt;/h3&gt;
&lt;ul class=&quot;task-list&quot;&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;Upgrade Lincoln-mkz Car model with better Textures.&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;Add a Camera Module to capture the front view of the car.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;progress-video&quot;&gt;Progress Video&lt;/h2&gt;

&lt;!-- Courtesy of embedresponsively.com --&gt;

&lt;div class=&quot;responsive-video-container&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube-nocookie.com/embed/mlFsR78OP7A&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/div&gt;</content><author><name></name></author><summary type="html">We had a discussion at the beginning of the week, the task at hand was to get improve asthetics and also add a camera module to thee front of the Lincoln Mkz car. The Camera module lag 😔</summary></entry><entry><title type="html">Coding Period - Week 6</title><link href="http://localhost:4000/gsoc2022-Akshay_Narisetti/2022/07/10/Coding-Period-Week-6.html" rel="alternate" type="text/html" title="Coding Period - Week 6" /><published>2022-07-10T00:00:00+05:30</published><updated>2022-07-10T00:00:00+05:30</updated><id>http://localhost:4000/gsoc2022-Akshay_Narisetti/2022/07/10/Coding%20Period%20-%20Week%206</id><content type="html" xml:base="http://localhost:4000/gsoc2022-Akshay_Narisetti/2022/07/10/Coding-Period-Week-6.html">&lt;p&gt;The Toyota Car has achieved the full  Ackermann steering and movement needed to be an Autonomous car, but there was still something quite awry with it.&lt;/p&gt;

&lt;h3 id=&quot;so-what-went-wrong-&quot;&gt;So what went wrong 😔?&lt;/h3&gt;

&lt;p&gt;The packages and hybrid plugins of the Toyota Car were never maintained after the ROSCON ‘17 Event, this was the time ROS as a framework had most changes to it. ROS Kinetic, which the Toyota Car was presented with went on to become ROS Melodic and then the currently used version to develop this project i.e ROS Noetic.&lt;/p&gt;

&lt;p&gt;so to bring the Toyota Car to life a lot of dependencies and plugins had to be changed, when a dependency is changed the underlying code still remains the same and just uses the updated dependency to compile the code.&lt;/p&gt;

&lt;p&gt;That was the problem in the case of our Toyota car model, well coming so far from a model that doesn’t work, I wasn’t going to leave it without a try. I geared up to solve all the errors the package had. Started from changing message types, plugins to joint state publishers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;QT4 THE DEAD END 🛑…&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The underlying code had a QT4 dependency, one way of going about it is to assume none of the changes after QT5 would break the existing code. I started by changing the requirement dependency and the code did not compile, this only meant changing 100s of lines of code and adding to that was the missing QtCreator Docs that were needed for migration.&lt;/p&gt;

&lt;p&gt;It meant only one thing, coming up with a new model, while I was at this there was always a Plan B. It was the &lt;strong&gt;Lincoln MKZ Model&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Things were quite straight forward from here, working with the Totota Car Model made it easy to deal with the Lincoln MKZ.&lt;/p&gt;

&lt;h3 id=&quot;tasks&quot;&gt;Tasks&lt;/h3&gt;
&lt;ul class=&quot;task-list&quot;&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;Create a New Car Model.&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;Car Model should have Ackermann Physics with movable and turnable wheels replicating a real world car.&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;Modular code to add Sensors in future.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h2&gt;

&lt;p&gt;Although it took a lot of time in making this possible the Lincoln MKZ model is sharp at looks and has even better physics compared to the Toyota Prius Model. It definitely stands as an upgrade to the Toyota Prius Model.&lt;/p&gt;

&lt;h2 id=&quot;progress-video&quot;&gt;Progress Video&lt;/h2&gt;

&lt;!-- Courtesy of embedresponsively.com --&gt;

&lt;div class=&quot;responsive-video-container&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube-nocookie.com/embed/CW2ddqtC-QY&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/div&gt;</content><author><name></name></author><summary type="html">The Toyota Car has achieved the full Ackermann steering and movement needed to be an Autonomous car, but there was still something quite awry with it. So what went wrong 😔? The packages and hybrid plugins of the Toyota Car were never maintained after the ROSCON ‘17 Event, this was the time ROS as a framework had most changes to it. ROS Kinetic, which the Toyota Car was presented with went on to become ROS Melodic and then the currently used version to develop this project i.e ROS Noetic. so to bring the Toyota Car to life a lot of dependencies and plugins had to be changed, when a dependency is changed the underlying code still remains the same and just uses the updated dependency to compile the code. That was the problem in the case of our Toyota car model, well coming so far from a model that doesn’t work, I wasn’t going to leave it without a try. I geared up to solve all the errors the package had. Started from changing message types, plugins to joint state publishers. QT4 THE DEAD END 🛑… The underlying code had a QT4 dependency, one way of going about it is to assume none of the changes after QT5 would break the existing code. I started by changing the requirement dependency and the code did not compile, this only meant changing 100s of lines of code and adding to that was the missing QtCreator Docs that were needed for migration. It meant only one thing, coming up with a new model, while I was at this there was always a Plan B. It was the Lincoln MKZ Model. Things were quite straight forward from here, working with the Totota Car Model made it easy to deal with the Lincoln MKZ.</summary></entry><entry><title type="html">Coding Period - Week 5</title><link href="http://localhost:4000/gsoc2022-Akshay_Narisetti/2022/07/03/Coding-Period-Week-5.html" rel="alternate" type="text/html" title="Coding Period - Week 5" /><published>2022-07-03T00:00:00+05:30</published><updated>2022-07-03T00:00:00+05:30</updated><id>http://localhost:4000/gsoc2022-Akshay_Narisetti/2022/07/03/Coding%20Period%20-%20Week%205</id><content type="html" xml:base="http://localhost:4000/gsoc2022-Akshay_Narisetti/2022/07/03/Coding-Period-Week-5.html">&lt;p&gt;After achieving the basic forward and backward motion of the Toyota Car, this week’s task is to implement the Ackermann steering which will enable the Toyota Car to steer in left and right directions making it a Completely abled Car.&lt;/p&gt;

&lt;h3 id=&quot;tasks&quot;&gt;Tasks&lt;/h3&gt;
&lt;ul class=&quot;task-list&quot;&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;Implement the Toyota Car model with Ackermann Steering.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h2&gt;
&lt;p&gt;After juggling a lot with the dependencies and plugins the Toyota Car model with Ackermann steering is complete.&lt;/p&gt;

&lt;h2 id=&quot;progress-video&quot;&gt;Progress Video&lt;/h2&gt;

&lt;!-- Courtesy of embedresponsively.com --&gt;

&lt;div class=&quot;responsive-video-container&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube-nocookie.com/embed/jB0DKaMbeNg&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/div&gt;</content><author><name></name></author><summary type="html">After achieving the basic forward and backward motion of the Toyota Car, this week’s task is to implement the Ackermann steering which will enable the Toyota Car to steer in left and right directions making it a Completely abled Car.</summary></entry><entry><title type="html">Coding Period - Week 4</title><link href="http://localhost:4000/gsoc2022-Akshay_Narisetti/2022/06/26/Coding-Period-Week-4.html" rel="alternate" type="text/html" title="Coding Period - Week 4" /><published>2022-06-26T00:00:00+05:30</published><updated>2022-06-26T00:00:00+05:30</updated><id>http://localhost:4000/gsoc2022-Akshay_Narisetti/2022/06/26/Coding%20Period%20-%20Week%204</id><content type="html" xml:base="http://localhost:4000/gsoc2022-Akshay_Narisetti/2022/06/26/Coding-Period-Week-4.html">&lt;p&gt;We had a discussion at the beginning of the week, the task at hand was to get a realistic Toyota Car running inside ROS and Gazebo with Ackermann physics.&lt;/p&gt;

&lt;h3 id=&quot;tasks&quot;&gt;Tasks&lt;/h3&gt;
&lt;ul class=&quot;task-list&quot;&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;Build a Toyota Car model with Ackermann Physics.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h2&gt;
&lt;p&gt;Most Toyota Car packages of the models and their plugins being incompatible with Gazebo11, I was able get the basic forward and backward functionatlity just right, the Ackermann steering still needs quite a bit of workaround with ROS noetic to enable the Car to move in left and right directions.&lt;/p&gt;

&lt;h2 id=&quot;progress-video&quot;&gt;Progress Video&lt;/h2&gt;

&lt;!-- Courtesy of embedresponsively.com --&gt;

&lt;div class=&quot;responsive-video-container&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube-nocookie.com/embed/woRc61_0D_Q&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/div&gt;</content><author><name></name></author><summary type="html">We had a discussion at the beginning of the week, the task at hand was to get a realistic Toyota Car running inside ROS and Gazebo with Ackermann physics.</summary></entry><entry><title type="html">Coding Period - Week 3</title><link href="http://localhost:4000/gsoc2022-Akshay_Narisetti/2022/06/20/Coding-Period-Week-3.html" rel="alternate" type="text/html" title="Coding Period - Week 3" /><published>2022-06-20T00:00:00+05:30</published><updated>2022-06-20T00:00:00+05:30</updated><id>http://localhost:4000/gsoc2022-Akshay_Narisetti/2022/06/20/Coding%20Period%20-%20Week%203</id><content type="html" xml:base="http://localhost:4000/gsoc2022-Akshay_Narisetti/2022/06/20/Coding-Period-Week-3.html">&lt;p&gt;Before actually going ahead and building the Ackermann steering on the real-world car it was important to implement it at a low scale i.e on a toy car, this checks out as a proof-of-concept for the upcoming weeks.&lt;/p&gt;

&lt;h3 id=&quot;tasks&quot;&gt;Tasks&lt;/h3&gt;
&lt;ul class=&quot;task-list&quot;&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;Create Ackermann Steering on a Toy Car.&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;Convert linear and angular messages into Ackermann steering messages used by the &lt;a href=&quot;https://wiki.ros.org/action/fullsearch/ackermann_steering_controller&quot;&gt;Ackermann Steering Package&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h2&gt;
&lt;p&gt;The implementation of the Ackermann steering at this scale on a Toy Car helps in the implementation of Ackermann steering in the upcoming weeks on a large scale version.&lt;/p&gt;

&lt;h2 id=&quot;progress-video&quot;&gt;Progress Video&lt;/h2&gt;

&lt;!-- Courtesy of embedresponsively.com --&gt;

&lt;div class=&quot;responsive-video-container&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube-nocookie.com/embed/YJcfqoEN_XA&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/div&gt;</content><author><name></name></author><summary type="html">Before actually going ahead and building the Ackermann steering on the real-world car it was important to implement it at a low scale i.e on a toy car, this checks out as a proof-of-concept for the upcoming weeks.</summary></entry></feed>